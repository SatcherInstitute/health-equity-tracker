#!/bin/bash

set -eu
set -o pipefail

readonly PROGDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly TRACKERDIR="$(cd "${PROGDIR}/.." && pwd)"

# shellcheck source=SCRIPTDIR/.util/print.sh
source "${PROGDIR}/.util/print.sh"

function main() {
  local bucket_name
  local data_file

  while [[ "${#}" != 0 ]]; do
      case "${1}" in
        --help|-h)
          shift 1
          usage
          exit 0
          ;;

        --data-file|-f)
          data_file="${2}"
          shift 2
          ;;

        "")
          util::print::error "you must pass in an argument for --data-file"
          ;;

        *)
          util::print::error "unknown argument \"${1}\""
          exit 1

      esac
    done

  bucket_name=$(gcloud config get-value project | cut -d - -f1)-dev-export

  util::print::info "Setting bucket name to ${bucket_name}"
  file::download "${bucket_name}" "${data_file}"
  file::convert "${data_file}"

  util::print::success "Success !!"
}


function usage() {
  cat <<-USAGE
download_data_file [OPTIONS]
Downloads a data file from the export bucket and places it in the tmp directory for local dev use.
OPTIONS
  --help            -h  prints the command usage
  --data-file       -f  name of the data file you want to download, without the .json
USAGE
}

function file::download() {
  local bucket_name file
  bucket_name="${1}"
  file="${2}"

  util::print::info "Downloading file from s3"
  gsutil -m cp "gs://${bucket_name}/${file}.json" "/tmp/${file}.json"
}

function file::convert() {
  local file
  file="${1}"

  util::print::info "Converting from ndjson to normal json"
  sed '1 s/^/[/ ; 2,$ s/^/,/; $ s/$/]/' "/tmp/${file}.json" | jq -r . > "${TRACKERDIR}/frontend/public/tmp/${file}.json"
}



main "${@:-}"
