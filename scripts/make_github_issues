#!/bin/bash

# Function to display help
function display_help() {
    echo "Usage: $(basename "$0") -f <file_with_paths> -m <milestone> -l <label> -b <markdown_file>"
    echo "Options:"
    echo "  -f, --file         Specify the file containing items to iterate over and make GitHub issues about."
    echo "  -p, --prefix       Specify the prefix to prepend to each item for the GitHub issue title."
    echo "  -b, --body         Specify the markdown file for the body of the GitHub issue."
    echo "  -m, --milestone    Specify the milestone for the GitHub issues."
    echo "  -l, --label        Specify the label for the GitHub issues."
    echo "  -h, --help         Display this help message."
    echo "Example: ./make_gihub_issues -f newline_delimited_file_with_keyword_per_issue.txt -p "Prefix to append to each keyword for issue title" -m "Milestone copy pasted from Milestone name on github, surrounded by double quotes" -l "Label from github, copy pasted and quoted" -b markdown_file_containing_generic_issue_body.md
"
    exit 1
}

# Parse command-line arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -f|--file) items="$2"; shift ;;
        -p|--prefix) prefix="$2"; shift ;;
        -m|--milestone) milestone="$2"; shift ;;
        -l|--label) label="$2"; shift ;;
        -b|--body) body_file="$2"; shift ;;
        -h|--help) display_help ;;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

# Validate input
if [ -z "$items" ] || [ -z "$prefix" ] || [ -z "$milestone" ] || [ -z "$label" ] || [ -z "$body_file" ]; then
    echo "Error: All options are required."
    display_help
fi

# Loop through each item in the file
while IFS= read -r item; do

  # Create the issue using gh command
  gh issue create --title "$prefix $item" \
                  --body-file "$body_file" \
                  --milestone "$milestone" \
                  --label "$label"

  # Introduce a delay between requests
  sleep 4
done < "$items"
