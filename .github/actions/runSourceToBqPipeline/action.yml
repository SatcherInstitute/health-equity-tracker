name: "Run gcs-to-bq-service"
description: "Triggers Cloud Run service to process source data (url, data/, or bucket) and write as tables to BigQuery."

inputs:
  service_url:
    description: "GCS to BQ service URL"
    required: true
  workflow_id:
    description: "Workflow ID"
    required: true
  dataset_name:
    description: "Dataset Name"
    required: true
  source_gcs_bucket:
    description: "Source GCS bucket (optional). Only used for COVID (manual) and ACS (landing)"
    required: false
  demographic:
    description: "Demographic (optional)"
    required: false
    default: ""
  geographic:
    description: "Geographic (optional)"
    required: false
    default: ""
  year:
    description: "Year (optional)"
    required: false
    default: ""
  category:
    description: "Category (optional)"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - run: |
        echo "Making request to ${{ inputs.service_url }}"
        echo "Workflow ID: ${{ inputs.workflow_id }}, Dataset: ${{ inputs.dataset_name }}"
        echo "Demographic: ${{ inputs.demographic }}, Geographic: ${{ inputs.geographic }}"

        # Create the request payload
        REQUEST_PAYLOAD="{\"message\":{\"is_airflow_run\":true,\"id\":\"${{ inputs.workflow_id }}\",\"gcs_bucket\":\"${{ inputs.source_gcs_bucket }}\",\"dataset\":\"${{ inputs.dataset_name }}\",\"demographic\":\"${{ inputs.demographic }}\",\"geographic\":\"${{ inputs.geographic }}\",\"year\":\"${{ inputs.year }}\",\"category\":\"${{ inputs.category }}\"}}"

        # Log the payload (optional - remove if contains sensitive data)
        echo "Request payload: $REQUEST_PAYLOAD"

        # Make the request and store the response
        RESPONSE=$(curl -X POST \
          -H "Content-Type: application/json" \
          -d "$REQUEST_PAYLOAD" \
          ${{ inputs.service_url }} -s -o response.txt -w "%{http_code}")

        # Always display the status code
        echo "Response status code: $RESPONSE"

        # Always display the response content
        echo "Response content:"
        cat response.txt || echo "No response content available"

        # Check status code and handle accordingly
        if [[ $RESPONSE -ge 400 ]]; then
          echo "::error::Request failed with status code $RESPONSE"
          exit 1
        else
          echo "::notice::Service request completed successfully with status code $RESPONSE"
        fi
      shell: bash
