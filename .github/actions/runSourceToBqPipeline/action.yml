name: "Run gcs-to-bq-service"
description: "Triggers Cloud Run service to process source data (url, data/, or bucket) and write as tables to BigQuery."

inputs:
  service_url:
    description: "GCS to BQ service URL"
    required: true
  workflow_id:
    description: "Workflow ID"
    required: true
  dataset_name:
    description: "Dataset Name"
    required: true
  source_gcs_bucket:
    description: "Source GCS bucket (optional). Only used for COVID (manual) and ACS (landing)"
    required: false
  demographic:
    description: "Demographic (optional)"
    required: false
    default: ""
  geographic:
    description: "Geographic (optional)"
    required: false
    default: ""
  year:
    description: "Year (optional)"
    required: false
    default: ""
  category:
    description: "Category (optional)"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - run: |
        curl -X POST \
        -H "Content-Type: application/json" \
        -d "{\"message\":{\"is_airflow_run\":true,\"id\":\"${{ inputs.workflow_id }}\",\"gcs_bucket\":\"${{ inputs.source_gcs_bucket }}\",\"dataset\":\"${{ inputs.dataset_name }}\",\"demographic\":\"${{ inputs.demographic }}\",\"geographic\":\"${{ inputs.geographic }}\",\"year\":\"${{ inputs.year }}\",\"category\":\"${{ inputs.category }}\"}}" \
        ${{ inputs.service_url }} -s -o response.txt -w "%{http_code}" | { read status; if [ $status -ge 400 ]; then echo "Error: Request failed with status code $status"; cat response.txt; exit 1; else echo "Success: Service request completed with status code $status"; cat response.txt; fi; }
      shell: bash
