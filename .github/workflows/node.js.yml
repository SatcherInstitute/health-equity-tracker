# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    working-directory: frontend

jobs:
  cache_node_modules:
    name: Caches node and node_modules first
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          # caches node itself, but not the modules
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm ci

  playwright_tests_e2e:
    name: Runs frontend E2E
    runs-on: ubuntu-latest
    needs: cache_node_modules

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      # - name: Install dependencies
      #   run: npm ci
      - name: Install playwright browsers
        run: npx playwright install chromium --with-deps
      - name: Runs playwright E2E
        run: npx playwright test --project=E2E

  build_frontend:
    name: Builds frontend
    runs-on: ubuntu-latest
    needs: cache_node_modules

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      # - name: Install dependencies (previously cached globally)
      #   run: npm ci
      - name: Build React frontend
        run: npm run build

  jest_unit_tests_cspell:
    name: Runs spellcheck and unit tests
    runs-on: ubuntu-latest
    needs: cache_node_modules

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          # cache-dependency-path: frontend/package-lock.json
      # - name: Install dependencies (previously cached globally)
      #   run: npm ci
      - name: Run cspell spellcheck
        run: npm run cspell
      - name: Run Jest unit tests
        run: npm test
