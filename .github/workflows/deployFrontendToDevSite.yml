name: Deploy `dev-site` branch frontend to dev.healthequitytracker.org

on:
  push:
    branches: [dev-site]
  workflow_dispatch:

jobs:
  build-frontend:
    if: github.repository == 'SatcherInstitute/health-equity-tracker'
    name: Frontend Image
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.frontend.outputs.image-digest }}
    steps:
      - name: Check Out Code from main
        uses: actions/checkout@v4
        with:
          ref: dev-site
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.TEST_DEPLOYER_SA_KEY }}
      - name: Set Up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.TEST_PROJECT_ID }}
      - id: frontend
        uses: ./.github/actions/buildAndPush
        with:
          dockerfile: 'frontend_server/Dockerfile'
          image-path: 'gcr.io/${{ secrets.TEST_PROJECT_ID }}/frontend'
          deploy-context: 'staging'
          basic-auth-username: ${{ secrets.BASIC_AUTH_USERNAME }}
          basic-auth-password: ${{ secrets.BASIC_AUTH_PASSWORD }}

  deploy:
    if: github.repository == 'SatcherInstitute/health-equity-tracker'
    name: (infra-test) Terraform / Airflow Configs
    runs-on: ubuntu-latest
    needs:
      [
        build-frontend,
      ]

    steps:
      - name: Check Out Code from `dev-site` branch
        uses: actions/checkout@v4
        with:
          ref: dev-site
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.TEST_DEPLOYER_SA_KEY }}
      - name: Set Up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.TEST_PROJECT_ID }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        # Disable wrapper to enable access to terraform output.
        with:
          terraform_wrapper: false
      - name: Save credentials
        working-directory: ./config
        run: |
          cat > creds.json << EOF
          ${{ secrets.TEST_DEPLOYER_SA_KEY }}
          EOF
      - name: Terraform Init
        working-directory: ./config
        run: |
          terraform init -backend-config="bucket=${{ secrets.TEST_TF_STATE_BUCKET }}" \
          -backend-config="credentials=creds.json"
      - name: Terraform Apply
        id: terraform
        working-directory: ./config
        run: |
          terraform apply -auto-approve -var-file=test/test.tfvars \
          -var-file=common.tfvars \
          -var 'gcp_credentials=${{ secrets.TEST_DEPLOYER_SA_KEY }}' \
          -var 'project_id=${{ secrets.TEST_PROJECT_ID }}' \
          -var 'frontend_image_digest=${{ needs.build-frontend.outputs.image-digest }}'

          frontend_url=$(terraform output frontend_url)
          echo "frontend_url=$frontend_url" >> "$GITHUB_OUTPUT"